openapi: 3.0.0
info:
  title: E-Commerce API
  version: 1.0.0
  description: API documentation for E-Commerce system
servers:
  - url: 'http://localhost:4000'
    description: Development server
components:
  schemas:
    RegisterUser:
      type: object
      required:
        - firstName
        - lastName
        - email
        - dateOfBirth
        - password
        - confirmPassword
      properties:
        firstName:
          type: string
          description: The user's first name
        lastName:
          type: string
          description: The user's last name
        email:
          type: string
          description: The user's email
        dateOfBirth:
          type: string
          format: date
          description: The user's date of birth in ISO 8601 format
        password:
          type: string
          description: The user's password
        confirmPassword:
          type: string
          description: Confirmation of the user's password, must match the password
      example:
        firstName: John
        lastName: Doe
        email: johndoe@example.com
        dateOfBirth: 1990-01-01
        password: $Password123
        confirmPassword: $Password123

    LoginUser:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          description: The user's email
        password:
          type: string
          description: The user's password
      example:
        email: johndoe@example.com
        password: $Password123

paths:
  /api/auth/signup:
    post:
      summary: Register a new user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUser'
      responses:
        201:
          description: User registered successfully
        400:
          description: Email already in use or passwords do not match

  /api/auth/login:
    post:
      summary: Log in a user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUser'
      responses:
        200:
          description: Logged in successfully
        401:
          description: Invalid email or password

  /api/auth/logout:
    get:
      summary: Log out the current user
      tags: [Auth]
      responses:
        200:
          description: Successfully logged out

  /api/auth/protected:
    get:
      summary: Access a protected route
      tags: [Auth]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Access to protected route granted
 
    get:
      summary: Handle unimplemented endpoints
      tags: [Auth]
      responses:
        404:
          description: Endpoint not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
